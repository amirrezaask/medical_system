// Code generated by entc, DO NOT EDIT.

package user

import (
	"fmt"
)

const (
	// Label holds the string label denoting the user type in the database.
	Label = "user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldUserType holds the string denoting the user_type field in the database.
	FieldUserType = "user_type"
	// FieldNationalCode holds the string denoting the national_code field in the database.
	FieldNationalCode = "national_code"
	// FieldPasswordHash holds the string denoting the password_hash field in the database.
	FieldPasswordHash = "password_hash"
	// EdgePrescriptions holds the string denoting the prescriptions edge name in mutations.
	EdgePrescriptions = "prescriptions"
	// Table holds the table name of the user in the database.
	Table = "users"
	// PrescriptionsTable is the table that holds the prescriptions relation/edge.
	PrescriptionsTable = "prescriptions"
	// PrescriptionsInverseTable is the table name for the Prescription entity.
	// It exists in this package in order to avoid circular dependency with the "prescription" package.
	PrescriptionsInverseTable = "prescriptions"
	// PrescriptionsColumn is the table column denoting the prescriptions relation/edge.
	PrescriptionsColumn = "user_prescriptions"
)

// Columns holds all SQL columns for user fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldUserType,
	FieldNationalCode,
	FieldPasswordHash,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// UserType defines the type for the "user_type" enum field.
type UserType string

// UserType values.
const (
	UserTypePatient UserType = "patient"
	UserTypeDoctor  UserType = "doctor"
)

func (ut UserType) String() string {
	return string(ut)
}

// UserTypeValidator is a validator for the "user_type" field enum values. It is called by the builders before save.
func UserTypeValidator(ut UserType) error {
	switch ut {
	case UserTypePatient, UserTypeDoctor:
		return nil
	default:
		return fmt.Errorf("user: invalid enum value for user_type field: %q", ut)
	}
}
